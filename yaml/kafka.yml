apiVersion: v1
kind: List
metadata:
items:
#kafka
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: kafka
    name: kafka
  spec:
    podManagementPolicy: Parallel
    replicas: 3
    updateStrategy:
      type: RollingUpdate
    # revisionHistoryLimit: 3
    selector:
      matchLabels:
        app: kafka
    serviceName: kafka
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kafka
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - kafka
                  topologyKey: kubernetes.io/hostname
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: DoesNotExist
        containers:
        - image: quay.io/ypery/kafka:v0.11
          env:
          imagePullPolicy: Always
          name: kafka
          ports:
          - containerPort: 9092
            protocol: TCP
          resources:
            limits:
              cpu: 1
              memory: 1500Mi
            requests:
              cpu: 300m
              memory: 1500Mi
          livenessProbe:
            exec:
              command:
              - pidof
              - java
            failureThreshold: 10
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 50
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: kafkadata
        volumes:
          - emptyDir:
              medium: Memory
              sizeLimit: 1500Mi
            name: kafkadata
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30


- apiVersion: v1
  kind: Service
  metadata:
    annotations:
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      app: kafka
    name: kafkasvc
  spec:
    ports:
    - name: zookeeper
      port: 9092
      protocol: TCP
      targetPort: 9092
    selector:
      app: kafka
    publishNotReadyAddresses: true

#kafka headless service
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      app: kafka
    name: kafka
  spec:
    ports:
    - name: kafka
      port: 9092
      protocol: TCP
      targetPort: 9092
    clusterIP: None
    selector:
      app: kafka
    publishNotReadyAddresses: true

